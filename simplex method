C=[2 5];
A=[1,4;3,1;1,1];
b=[24;21;9];
[m,n]=size(A);
s=eye(m);
A=[A s b];
cost=zeros(1,n+m+1);
cost(1:n)=C;
bv=n+1:1:n+m;
zjcj=cost(bv)*A-cost;
zcj=[zjcj;A];
simptable=array2table(zcj);
simptable.Properties.VariableNames(1:size(A,2))={'x1','x2','s1','s2','s3','b'};
flag=true;
ratio=[];
while flag
    if any(zjcj<0)
        fprintf('curr not optimal');
        zc=zjcj(1:end-1);
        [Enter_val,pvt_col]=min(zc);
    if all(A(:,pvt_col)<=0)
        error('lpp unbounded all entries <=0 in col %d',pvt_col);
    else
        sol=A(:,end);
        col=A(:,pvt_col);
        for i=1:m
            if col(i)>0
                ratio(i)=sol(i)./col(i);
            else
                ratio(i)=inf;
            end
        end
        [leaving_val,pvt_row]=min(ratio);
    end
    bv(pvt_row)=pvt_col;
    pvt_key=A(pvt_row,pvt_col);
    A(pvt_row,:)=A(pvt_row,:)./pvt_key;
    for i=1:m
        if i~=pvt_row
            A(i,:)=A(i,:)-A(i,pvt_col).*A(pvt_row,:);
        end
    end
zjcj=zjcj-zjcj(pvt_col).*A(pvt_row,:);
zcj=[zjcj;A];
table=array2table(zcj);
table.Properties.VariableNames={'x1','x2','s1','s2','s3','sol'}
else 
        flag=false;
 end
end





output

curr not optimal
table =

  4×6 table

     x1      x2     s1      s2    s3    sol
    _____    __    _____    __    __    ___

    -0.75    0      1.25    0     0     30 
     0.25    1      0.25    0     0      6 
     2.75    0     -0.25    1     0     15 
     0.75    0     -0.25    0     1      3 

curr not optimal
table =

  4×6 table

    x1    x2       s1       s2       s3       sol
    __    __    ________    __    ________    ___

    0     0            1    0            1    33 
    0     1      0.33333    0     -0.33333     5 
    0     0      0.66667    1      -3.6667     4 
    1     0     -0.33333    0       1.3333     4 
